@model PostEditViewModel
@{
    ViewBag.Title = "Edit Post";
}

<h2 class="display-2 mb-5">Edit Post</h2>

@using (Html.BeginForm("Edit", "Post", FormMethod.Post)) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-group">
        @Html.LabelFor(x => x.Title)
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Slug)
        @Html.TextBoxFor(x => x.Slug, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Authors)
        @Html.DropDownListFor(x => x.Author.AuthorId, new SelectList(Model.Authors, "AuthorId", "DisplayName"), new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Categories)
        @Html.DropDownListFor(x => x.Category.CategoryId, new SelectList(Model.Categories, "CategoryId", "Name"), new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Summary)
        @Html.TextAreaFor(x => x.Summary, new { @class = "form-control", rows = 5 })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Content)
        <small class="form-text text-muted">
            This field supports Markdown input using the <a href="http://commonmark.org/" target="_blank">CommonMark specification</a>.
        </small>
        @Html.TextAreaFor(x => x.Content, new { @class = "form-control", rows = 50 })
    </div>
    @Html.HiddenFor(x => x.PostId)
    <div class="d-flex justify-content-between">
        <a href="@Url.Action("Index", "Post")" class="btn btn-outline-primary">
            <i class='fa fa-chevron-circle-left'></i> Back to List
        </a>
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>

}
